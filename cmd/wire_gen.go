// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/sirupsen/logrus"
	"jincheng/internal/config"
	"jincheng/internal/core/log"
	"jincheng/internal/db"
	"os"
	"os/signal"
	"syscall"
)

// Injectors from wire.go:

func InitApp() App {
	configConfig := config.GetConfig()
	logger := log.NewLog()
	dataBase := db.NewDataBase(configConfig, logger)
	app := App{
		DataBase: dataBase,
		Config:   configConfig,
		Logger:   logger,
	}
	return app
}

// wire.go:

type App struct {
	DataBase db.DataBase
	Config   config.Config
	Logger   *logrus.Logger
}

func (app *App) Start() <-chan os.Signal {
	c := make(chan os.Signal, 1)
	signal.Notify(c, syscall.SIGINT, syscall.SIGTERM)
	return c
}
